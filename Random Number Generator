#include <stdlib.h>
#include <time.h>
#include <string>
#include <iostream>
#include <vector>

using namespace std;

void SelectionSort(vector<int> &numbers, int numbersSize) {
	int i = 0;
	int j = 0;
	int indexSmallest = 0;
	int temp = 0;  // Temporary variable for swap
	for (i = 0; i < numbersSize - 1; ++i) {
		// Find index of smallest remaining element
		indexSmallest = i;
		for (j = i + 1; j < numbersSize; ++j) {
			if (numbers[j] < numbers[indexSmallest]) {
					indexSmallest = j;
				}
			}

		// Swap numbers[i] and numbers[indexSmallest]
		temp = numbers[i];
		numbers[i] = numbers[indexSmallest];
		numbers[indexSmallest] = temp;
	}
	}
int BinarySearch(vector<int> &numbers, int numbersSize, int key) {
	int mid = 0;
	int low = 0;
	int high = 0;
	high = numbersSize - 1;
	while (high >= low) {
		mid = (high + low) / 2;
		if (numbers[mid] < key) {
			low = mid + 1;
			}
		else if (numbers[mid] > key) {
			high = mid - 1;
			}
		else {
			return mid;
			}
		}
	return -1; // not found
	}
int main() {
	int rand_quant;
	vector<int> rand_nums;
	srand(time(NULL));
	//determine how many random numbers are generated
	cout << "Please enter the amount of numbers you'd like to generate (Minimum of 2): " << endl;
	cin >> rand_quant;
	if (rand_quant < 2) {
		cout << "Invalid entry. You must generate at least 2 numbers!" << endl << "Please try again..." << endl;
		}
	
	//generate random numbers, store in vector
	rand_nums.resize(rand_quant);		//allocates proper # of elements
	for (int i = 0; i < rand_quant; i++) {
		int j = i;		                      
		rand_nums.at(j) = rand() % 100 + 1;     // Random values land in the range of 1 to 100
		}	//stores in the vector

	//sort the list
	int capacity = rand_nums.capacity();	//returns size of vector
	SelectionSort(rand_nums, capacity);
	
	//start the guessing game
	int guess;
	bool found = false;
	cout <<endl<< "Ready to play?..." << endl;
	int mid = rand_nums.at(capacity / 2);
	while (found == false) {
		int w = 5;
		int that = w;
		cout << "Take a guess, enter a number between 1 and 100: ";
		cin >> guess;
		int Result = BinarySearch(rand_nums, capacity, guess);
			
		//guess is wrong
		if (Result == -1) {
			cout << "Wrong! You have " << that - 1 << " remaining attempts."<<endl;
			if (guess < mid) {
				cout << "Hint: Guess lower." << endl << endl;
				}
			else if (guess > mid) {
				cout << "Hint: Guess higher." << endl << endl;
				}
			}

		//guess is right
		else if (Result != -1){
			cout << "Are you psychic?! Good job!" << endl;
			found = true;
			}
		w--;
		if (w = 0) {
			found = true;
			}
		}
	cout << "Better luck next time! Wonk wonk!" << endl; 
	
	system("pause");
	return 0;
	}
